name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create test environment file
      run: |
        echo "TEST_DATABASE_URL=postgresql://test_user:test_password@localhost:5432/test_db" > .env.test
        echo "SESSION_SECRET=test-session-secret-for-ci" >> .env.test
        echo "DISCORD_BOT_TOKEN=test-discord-bot-token" >> .env.test
        echo "AIRTABLE_API_KEY=test-airtable-api-key" >> .env.test
        echo "FACEBOOK_APP_ID=test-facebook-app-id" >> .env.test
        echo "IMGUR_CLIENT_ID=test-imgur-client-id" >> .env.test

    - name: Run TypeScript type checking
      run: npm run check

    - name: Run unit tests
      run: npm run test:unit

    - name: Run integration tests
      run: npm run test:integration

    - name: Run E2E tests
      run: npm run test:e2e

    - name: Run full test suite with coverage
      run: npm run test:ci

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Generate test report
      if: always()
      run: |
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Tests completed for Node.js ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY
        if [ -f coverage/lcov-report/index.html ]; then
          echo "ðŸ“Š Coverage report generated" >> $GITHUB_STEP_SUMMARY
        fi

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run code quality checks
      run: npm run test:unit -- --testPathPattern=code-quality

    - name: Check for security vulnerabilities
      run: npm audit --audit-level=moderate

    - name: Lint check (if eslint is configured)
      run: |
        if [ -f .eslintrc.js ] || [ -f .eslintrc.json ]; then
          npx eslint . --ext .ts,.tsx,.js,.jsx --max-warnings 0
        else
          echo "ESLint not configured, skipping lint check"
        fi
      continue-on-error: true